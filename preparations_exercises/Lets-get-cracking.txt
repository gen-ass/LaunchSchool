Let's get cracking
1. Get the value from the challengeParameters in the last (most recent) random call
/*	(function ()
		{
			var keys=Object.keys( window );
			for (var i in keys)
			{
					if (typeof window[keys[i]] != 'function')
					console.log(keys[i], window[keys[i]]);
			}
		})(); /*

2. Multiply that value by Pi using Javascript Math.PI
/*function calculateCircumference(number) {
  return Math.floor(number * Math.PI );
}
console.log(calculateCircumference(068));*/

3. Round the result down to a value with 2 decimal points
https://www.calculatestuff.com/math/rounding-numbers-calculator

4. Multiply that by 33% of the challengeParameters value
chalParam(068 * 0.33%) = 22.44

5. Round that value down to a round number
https://www.calculatestuff.com/math/rounding-numbers-calculator

6. Convert the value to a HEX value
// https://www.rapidtables.com/convert/number/decimal-to-hex.html

7. Submit the value as a string to the 'handleSubmit' function 
handleSubmit('12b9');


/*function calculateCircumference(number) {
  return Math.floor(number * Math.PI );
}
console.log(calculateCircumference(068));*/

/* function roundDown(number) {
    var m = Number((Math.abs(number * Math.PI) * 100).toPrecision(15));
    return Math.round(m) / 100 * Math.sign(number);
}

console.log(roundDown(068));*/

// https://www.delftstack.com/howto/javascript/javascript-round-to-2-decimal-places/

function roundToTwo(number) {
    return (Math.floor((number * 0.33) * (Math.round(number * Math.PI  + "e+2")  + "e-2")).toString(16));
}
console.log(roundToTwo(149));

function challengeParam(number1) {
   return (number1 * 0.33);
}
console.log(challengeParam(149));


Decrypt JavaScript web token:
https://jwt.io/


function parseJwt (token) {
    var base64Url = token.split('.')[1];
    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
    }).join(''));

    return JSON.parse(jsonPayload);
};